import logging
from textwrap import dedent
from typing import Optional

import openai
from openai import AsyncOpenAI
from pydantic import BaseModel, Field

from bot import schemas, settings


class TextSummary(BaseModel):
    """–ú–æ–¥–µ–ª—å —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è."""

    is_vacancy: bool
    position: Optional[str] = None
    languages: list[str] = Field(default_factory=list)
    grades: list[schemas.Grades] = Field(default_factory=list)

    @property
    def languages_lower(self) -> list[str]:
        return [lg.lower() for lg in self.languages if lg.lower() in schemas.Languages]


PROMPT = """
–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ç–µ–∫—Å—Ç –∏ –ø–µ—Ä–µ—Å–∫–∞–∂–∏ –µ–≥–æ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é —Å—Ö–µ–º—É.
–û–ø–∏—Å–∞–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Å—Ö–µ–º—ã:
is_vacancy: —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç –≤–∞–∫–∞–Ω—Å–∏–µ–π, –¥–∞ –∏–ª–∏ –Ω–µ—Ç. –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –µ—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ –µ—Å—Ç—å —Ö—ç—à—Ç–µ–≥ #—Ä–µ–∑—é–º–µ, 
—Ç–æ —Ç–µ–∫—Å—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ —è–≤–ª—è–µ—Ç—Å—è –Ω–µ –≤–∞–∫–∞–Ω—Å–∏–µ–π, –∞ —Ä–µ–∑—é–º–µ —Å–æ–∏—Å–∫–∞—Ç–µ–ª—è.
position: –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏, –æ–ø–∏—Å–∞–Ω–Ω–æ–π –≤ –≤–∞–∫–∞–Ω—Å–∏–∏. –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –≤–∞–∫–∞–Ω—Å–∏–µ–π, —É–∫–∞–∂–∏ –≤ —ç—Ç–æ–º –ø–∞—Ä–∞–º–µ—Ç—Ä–µ None.
languages: —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è, –∑–Ω–∞–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è, –¥–ª—è –¥–æ–ª–∂–Ω–æ—Å—Ç–∏, –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –≤—ã—à–µ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä–µ position.
–í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ —Å–ª–µ–¥—É—é—â–∏—Ö —è–∑—ã–∫–æ–≤: Python, Golang. –ù–µ —Å—Ç—Ä–µ–º–∏—Å—å —É–∫–∞–∑–∞—Ç—å –≤—Å–µ —è–∑—ã–∫–∏, 
—É–∫–∞–∂–∏ –ª–∏—à—å —Ç–µ, –∫–æ—Ç–æ—Ä—ã–µ —É–ø–æ–º–∏–Ω–∞—é—Ç—Å—è –≤ –Ω–∞—á–∞–ª–µ —Ç–µ–∫—Å—Ç–∞.
–ï—Å–ª–∏ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è —ç—Ç–∏—Ö —è–∑—ã–∫–æ–≤ –Ω–µ—Ç –≤ —Ç–µ–∫—Å—Ç–µ, –Ω–µ —É–∫–∞–∑—ã–≤–∞–π –∏—Ö, –∞ —É–∫–∞–∂–∏ —Ç–µ —è–∑—ã–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ, –Ω–∞–æ–±–æ—Ä–æ—Ç, —É–ø–æ–º–∏–Ω–∞—é—Ç—Å—è –≤ —Ç–µ–∫—Å—Ç–µ.
grades: —É—Ä–æ–≤–µ–Ω—å –¥–æ–ª–∂–Ω–æ—Å—Ç–∏, –æ–ø–∏—Å–∞–Ω–Ω–æ–π –≤ –≤–∞–∫–∞–Ω—Å–∏–∏.
–í—ã–±–µ—Ä–∏ –∏–∑ –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ª–µ–¥—É—é—â–∏—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:
- junior
- middle
- senior
- techlead
–ï—Å–ª–∏ –≤ –≤–∞–∫–∞–Ω—Å–∏–∏ —É–∫–∞–∑–∞–Ω–∞ –¥–æ–ª–∂–Ω–æ—Å—Ç—å intern –∏–ª–∏ —Å—Ç–∞–∂–µ—Ä, —Å—á–∏—Ç–∞–π —á—Ç–æ —ç—Ç–æ –≤–∞–∫–∞–Ω—Å–∏—è —É—Ä–æ–≤–Ω—è junior.
–ü—Ä–∏ –≤—ã–±–æ—Ä–µ —É—Ä–æ–≤–Ω—è –¥–æ–ª–∂–Ω–æ—Å—Ç–∏ –æ—Ä–∏–µ–Ω—Ç–∏—Ä—É–π—Å—è –Ω–µ —Ç–æ–ª—å–∫–æ –Ω–∞ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ junior, middle, head, lead –∏ —Ç.–¥. –Ω–æ –∏ –Ω–∞ —É—Ä–æ–≤–µ–Ω—å
–ø—Ä–µ–¥–ª–∞–≥–∞–µ–º–æ–π –≤ –≤–∞–∫–∞–Ω—Å–∏–∏ –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã.
–ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ –≤ —Ç–µ–∫—Å—Ç–µ —É–∫–∞–∑–∞–Ω–∞ –∑–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞ 700$, —ç—Ç–æ –≤–∞–∫–∞–Ω—Å–∏—è —É—Ä–æ–≤–Ω—è junior,
—Ç–∞–∫ –∫–∞–∫ —É —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ —É—Ä–æ–≤–Ω—è middle, senior, techlead –∑–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞ –æ–±—ã—á–Ω–æ –≤—ã—à–µ.
–ü—Ä–∏ —ç—Ç–æ–º –∏—Å—Ö–æ–¥–∏ –∏–∑ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–µ–Ω–∏—è, —á—Ç–æ –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ —É—Ä–æ–≤–µ–Ω—å –∑–∞—Ä–ø–ª–∞—Ç—ã –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω –¥–ª—è —Å–º–µ–∂–Ω—ã—Ö –¥–æ–ª–∂–Ω–æ—Å—Ç–µ–π:
–Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞—Ä–∞–±–æ—Ç–Ω–∞—è –ø–ª–∞—Ç–∞ 300 —Ç—ã—Å. —Ä—É–±–ª–µ–π –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∞ –∫–∞–∫ middle, —Ç–∞–∫ –∏ senior —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É.
–ï—Å–ª–∏ —Ç–µ–∫—Å—Ç —è–≤–ª—è–µ—Ç—Å—è –≤–∞–∫–∞–Ω—Å–∏–µ–π, –Ω–æ –ø—Ä–∏ —ç—Ç–æ–º –Ω–µ–ª—å–∑—è —Å–¥–µ–ª–∞—Ç—å –∑–∞–∫–ª—é—á–µ–Ω–∏–µ –æ–± —É—Ä–æ–≤–Ω–µ –¥–æ–ª–∂–Ω–æ—Å—Ç–∏, —É–∫–∞–∂–∏ –≤—Å–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã: 
junior, middle, senior, techlead

–ü—Ä–∏–º–µ—Ä—ã:
    1. –ü—Ä–∏–º–µ—Ä 1:
        –¢–µ–∫—Å—Ç: [**–ü–µ—Ä–µ—Å–ª–∞–Ω–æ –∏–∑ Remote IT (Inflow)**](https://t.me/c/1141029953/10806)**
            Middle+/Senior Node JS Developer \n
            | https://telegra.ph/Middle--Senior-Node-JS-Developer-02-10 #middle #senior #NodeJS #remote #itjob
        –û—Ç–≤–µ—Ç: {
            is_vacancy: true,
            position: "Node JS Developer",
            languages: [Node JS],
            grades: [middle, senior]
        }
    2. –ü—Ä–∏–º–µ—Ä 2: 
        –¢–µ–∫—Å—Ç: [**–ü–µ—Ä–µ—Å–ª–∞–Ω–æ –∏–∑ Python Django Jobs**](https://t.me/c/1750581511/97184)**
            #resume #cv #junior #middle #python #django #fullstack #javascript #nodejs #—Ä–µ–∑—é–º–µ
            –ó–∞–Ω—è—Ç–æ—Å—Ç—å: –ø–æ–ª–Ω–∞—è\n–õ–æ–∫–∞—Ü–∏—è: –ö—ã—Ä–≥—ã–∑—Å—Ç–∞–Ω \n–ö–æ–Ω—Ç–∞–∫—Ç—ã: @username\n–û–ø—ã—Ç —Ä–∞–±–æ—Ç—ã: 3,5 –≥–æ–¥–∞"
            –°—Ç–µ–∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π:
            Front (Strong junior): \n   HTML \n   CSS (Bootstrap, Tailwind)\n   JavaScript (DOM)\n   React (Redux)
            Backend at python (Middle):\n    Python\n    Django (DRF, Channels, Celery, Celery-beat)
        –û—Ç–≤–µ—Ç: {
            is_vacancy: false,
            position: null,
            languages: [],
            grades: [],
        }
    3. –ü—Ä–∏–º–µ—Ä 3:
        –¢–µ–∫—Å—Ç: [**–ü–µ—Ä–µ—Å–ª–∞–Ω–æ –∏–∑ Job for Python**](https://t.me/c/1381822968/4091)**
            Team Lead** at¬†Emerging Travel Group\n**Emerging Travel Group** is¬†a¬†travel technology company 
            that includes six brands: Russian Ostrovok.ru, B2B.Ostrovok, Ostrovok.ru Business trips
            and forms ZenHotels, RateHawk and Roundtrip.\n**Remote work.**\n
            **Stack:** Golang, Python (Django), PostgreSQL.\n[Job description](https://www.emergingtravel.com/career/position/3866839/)",
            **–ë–æ–ª—å—à–µ –≤–∞–∫–∞–Ω—Å–∏–π –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤:** @jobfortm"
        –û—Ç–≤–µ—Ç: {
            is_vacancy: true,
            position: [Team Lead],
            languages: [Golang, Python],
            grades [techlead],
        }
    4. –ü—Ä–∏–º–µ—Ä 4:
        –¢–µ–∫—Å—Ç: [**–ü–µ—Ä–µ—Å–ª–∞–Ω–æ –∏–∑ Remote IT (Inflow)**](https://t.me/c/1141029953/10814)**"
            "**Python developer | https://telegra.ph/Python-developer-02-13-6 #python #remote #itjob"
        –û—Ç–≤–µ—Ç: {
            is_vacancy: true,
            position: [Python developer],
            languages: [Python],
            grades: [junior, middle, senior, techlead],
        }
    5. –ü—Ä–∏–º–µ—Ä 5:
        –¢–µ–∫—Å—Ç: [**–ü–µ—Ä–µ—Å–ª–∞–Ω–æ –∏–∑ Job for Python**](https://t.me/c/1381822968/4095)**
            "**üîπ**Python-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫**\nüîπ**Python Developer (LLM)**\n
            –≤¬†**2–ì–ò–°**¬†‚Äî –º–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –∫–æ–º–ø–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç 
            —Å–µ—Ä–≤–∏—Å—ã –¥–ª—è –∫–æ–º—Ñ–æ—Ä—Ç–Ω–æ–π –∂–∏–∑–Ω–∏ –≤¬†–≥–æ—Ä–æ–¥–µ.\n**–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–¥–∞–ª–µ–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∏–ª–∏ –æ—Ñ–∏—Å—ã 
            –≤¬†–ú–æ—Å–∫–≤–µ, –ü–∏—Ç–µ—Ä–µ, –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫–µ –∏¬†–¥—Ä—É–≥–∏—Ö –≥–æ—Ä–æ–¥–∞—Ö.**\n–ò—â–µ—Ç –ö–∞–º–∏–ª–ª–∞ –°–∞–≥–∏—Ç–æ–≤–∞, –µ–µ¬†[–ø–æ—Å—Ç –Ω–∞¬†LinkedIn].",
        –û—Ç–≤–µ—Ç: {
            is_vacancy: true,
            position: Python-—Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫,
            languages: [Python],
            grades: [junior, middle, senior, techlead],
        }    
"""


class OpenAIClient:
    """OpenAI http-–∫–ª–∏–µ–Ω—Ç."""

    def __init__(self, **kwargs):
        self.openai_cli = AsyncOpenAI(api_key=settings.OPENAI_KEY)
        self.model = 'gpt-4o-mini'
        super().__init__(**kwargs)

    async def ai_request(self, text: str) -> TextSummary:
        """–ó–∞–ø—Ä–æ—Å –∫ LLM-–º–æ–¥–µ–ª–∏ –Ω–∞ –ø–∞—Ä—Å–∏–Ω–≥ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è."""
        try:
            completion = await self.openai_cli.beta.chat.completions.parse(
                model=self.model,
                temperature=0.2,
                messages=[{'role': 'system', 'content': dedent(PROMPT)}, {'role': 'user', 'content': text}],
                response_format=TextSummary,
            )
            summary = completion.choices[0].message.parsed
            logging.info(f'Got text summary: {summary.model_dump()}')
            return summary
        except openai.RateLimitError as rate_err:
            logging.error(f'Got {rate_err} for {text}')
            # TODO: add email notification
        except openai.APIError as err:
            logging.error(f'Got {err} for {text}')
        summary = TextSummary(is_vacancy=False)
        logging.info(f'Got text summary: {summary.model_dump()}')
        return summary
